# Generated by Django 5.1.4 on 2025-01-16 13:21

import django.core.validators
import django.db.models.deletion
import django_resized.forms
import phonenumber_field.modelfields
import shop.fields
import shop.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('info', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Category Name')),
                ('name_ar', models.CharField(max_length=100, null=True, verbose_name='Category Name')),
                ('name_he', models.CharField(max_length=100, null=True, verbose_name='Category Name')),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format='WEBP', keep_meta=True, null=True, quality=85, scale=None, size=[500, 500], upload_to='categories/', validators=[shop.validators.FileSizeValidator(max_upload_file_size=20971520)], verbose_name='Image')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('order', models.PositiveIntegerField(blank=True, default=0, verbose_name='Order By')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='Create At')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Update At')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ('order', '-create_at', '-update_at'),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Product Name')),
                ('name_ar', models.CharField(max_length=255, null=True, verbose_name='Product Name')),
                ('name_he', models.CharField(max_length=255, null=True, verbose_name='Product Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('description_ar', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('description_he', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Price')),
                ('seal_percentage', models.DecimalField(decimal_places=2, help_text='Percentage value between 0 and 100.', max_digits=5, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Seal Percentage')),
                ('letter_sizes', shop.fields.CustomArrayField(base_field=models.CharField(blank=True, choices=[('S', 'Small'), ('M', 'Medium'), ('L', 'Large'), ('XL', 'Extra Large'), ('XXL', 'Double Extra Large'), ('3XL', 'Triple Extra Large'), ('4XL', 'Quadruple Extra Large'), ('5XL', 'Quintuple Extra Large')], max_length=5, null=True, verbose_name='Letter Size Option'), blank=True, null=True, size=None, verbose_name='Letter Size')),
                ('number_sizes', shop.fields.CustomArrayField(base_field=models.IntegerField(blank=True, choices=[(35, '35'), (36, '36'), (37, '37'), (38, '38'), (39, '39'), (40, '40'), (41, '41'), (42, '42'), (43, '43'), (44, '44'), (45, '45'), (46, '46'), (47, '47'), (48, '48')], null=True, verbose_name='Number Size Option'), blank=True, null=True, size=None, verbose_name='Number Size')),
                ('color', shop.fields.CustomArrayField(base_field=models.CharField(blank=True, choices=[('red', 'Red'), ('rellow', 'Yellow'), ('blue', 'Blue'), ('breen', 'Green'), ('black', 'Black'), ('white', 'White'), ('orange', 'Orange'), ('purple', 'Purple'), ('pink', 'Pink'), ('grey', 'Grey'), ('brown', 'Brown'), ('navy', 'Navy')], max_length=10, null=True, verbose_name='Color Option'), blank=True, null=True, size=None, verbose_name='Color')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('order', models.PositiveIntegerField(blank=True, default=0, verbose_name='Order By')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='Create At')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Update At')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='shop.category', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ('order', '-create_at', '-update_at'),
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='WEBP', keep_meta=True, null=True, quality=100, scale=None, size=[600, 600], upload_to='products/', validators=[shop.validators.FileSizeValidator(max_upload_file_size=20971520)], verbose_name='Product Image')),
                ('order', models.PositiveIntegerField(blank=True, default=0, verbose_name='Order By')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='Create At')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Update At')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_images', to='shop.product', verbose_name='Prouct Image')),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Product Images',
                'ordering': ('order', '-create_at', '-update_at'),
            },
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Shop Name')),
                ('name_ar', models.CharField(max_length=255, null=True, verbose_name='Shop Name')),
                ('name_he', models.CharField(max_length=255, null=True, verbose_name='Shop Name')),
                ('slug', models.SlugField(help_text='Unique identifier for the restaurant used in the URL. It must contain only English letters, numerics, dashes (-), and underscores (_)', max_length=255, unique=True, validators=[shop.validators.validate_english_alphanum], verbose_name='Slug')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('contact_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Contact Number')),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format='WEBP', keep_meta=True, null=True, quality=100, scale=None, size=[300, 300], upload_to='shops/', validators=[shop.validators.FileSizeValidator(max_upload_file_size=20971520)], verbose_name='Image')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('order', models.PositiveIntegerField(blank=True, default=0, verbose_name='Order By')),
                ('primary_color', models.CharField(help_text='Primary color for template (e.g., #RRGGBB or #RGB).', max_length=7, null=True, validators=[shop.validators.validate_hex_color], verbose_name='Primary Color')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='Create At')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Update At')),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='shop', to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
                ('theme', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shops', to='info.theme', verbose_name='Theme')),
            ],
            options={
                'verbose_name': 'Shop',
                'verbose_name_plural': 'Shops',
                'ordering': ('order', '-create_at', '-update_at'),
            },
        ),
        migrations.CreateModel(
            name='HeaderImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format='WEBP', keep_meta=True, null=True, quality=100, scale=None, size=[1920, 1080], upload_to='headers/', validators=[shop.validators.FileSizeValidator(max_upload_file_size=20971520)], verbose_name='Image')),
                ('is_active', models.BooleanField(default=True, help_text='Setting it to false, makes the image disappear from the page', verbose_name='Active')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='header_images', to='shop.shop', verbose_name='Header Image')),
            ],
            options={
                'verbose_name': 'Home Page Image',
                'verbose_name_plural': 'Home Page Images',
                'ordering': ('-create_at', '-update_at'),
            },
        ),
        migrations.AddField(
            model_name='category',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='shop.shop', verbose_name='Shop'),
        ),
        migrations.CreateModel(
            name='SocialMediaLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('facebook', 'Facebook'), ('twitter', 'Twitter'), ('instagram', 'Instagram'), ('tiktok', 'TikTok'), ('youtube', 'YouTube'), ('pinterest', 'Pinterest'), ('phone_number_1', 'Phone Number 1'), ('phone_number_2', 'Phone Number 2')], max_length=20, verbose_name='Platform')),
                ('url', models.CharField(max_length=250, null=True, verbose_name='Link / Phone Number')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='Create At')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Update At')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_media_links', to='shop.shop', verbose_name='Shop')),
            ],
            options={
                'verbose_name': 'Social Media Link',
                'verbose_name_plural': 'Social Media Links',
                'ordering': ('-create_at', '-update_at'),
            },
        ),
    ]
